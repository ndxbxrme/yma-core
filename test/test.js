// Generated by CoffeeScript 2.5.1
(function() {
  var browser, closePage, gotoPage, localServer, makeServer, page, puppeteer, waitForRendered, ws;

  localServer = require('local-web-server');

  puppeteer = require('puppeteer');

  global.navigator = {
    userAgent: 'summat'
  };

  browser = null;

  page = null;

  ws = null;

  makeServer = function(path) {
    return ws = localServer.create({
      port: 23232,
      directory: path,
      spa: 'index.html'
    });
  };

  gotoPage = async function(path) {
    browser = (await puppeteer.launch({
      headless: true
    }));
    page = (await browser.newPage());
    return (await page.goto('http://localhost:23232/' + (path || '')));
  };

  closePage = async function() {
    await browser.close();
    return ws.server.close();
  };

  waitForRendered = async function() {
    return (await page.evaluate(function() {
      return new Promise(function(resolve) {
        window.app.$on('rendered', function() {
          return resolve();
        });
        return window.app.render();
      });
    }));
  };

  exports.ymaCoreTest = {
    "Should autofocus first input": async function(test) {
      makeServer('test/autofocus');
      await gotoPage('');
      await waitForRendered();
      test.ok((await page.evaluate(function() {
        return document.querySelectorAll('input')[0] === document.activeElement;
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelectorAll('input')[1] !== document.activeElement;
      })));
      await closePage();
      return test.done();
    },
    "Should display home scene": async function(test) {
      makeServer('test/router-basic');
      await gotoPage('');
      await waitForRendered();
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="home"].yma-router-active');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="about"].yma-router-parked');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="users"].yma-router-parked');
      })));
      await closePage();
      return test.done();
    },
    "Should display about scene": async function(test) {
      makeServer('test/router-basic');
      await gotoPage('about');
      await waitForRendered();
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="about"].yma-router-active');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="home"].yma-router-parked');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="users"].yma-router-parked');
      })));
      await closePage();
      return test.done();
    },
    "Should display users scene": async function(test) {
      makeServer('test/router-basic');
      await gotoPage('users');
      await waitForRendered();
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="users"].yma-router-active');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="home"].yma-router-parked');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="about"].yma-router-parked');
      })));
      await closePage();
      return test.done();
    },
    "Should display router component": async function(test) {
      makeServer('test/router-components');
      await gotoPage('');
      await waitForRendered();
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="home"].yma-router-active');
      })));
      test.ok((await page.evaluate(function() {
        return document.querySelector('scene[name="about"].yma-router-parked');
      })));
      await closePage();
      return test.done();
    },
    "Should press a button and update scope variable": async function(test) {
      var val;
      makeServer('test/press-basic');
      await gotoPage('');
      await waitForRendered();
      val = (await page.evaluate(function() {
        return new Promise(function(resolve) {
          window.app.$once('updated', function() {
            return resolve(document.querySelector('h1').innerHTML);
          });
          return document.querySelector('a').click();
        });
      }));
      test.equals(val, 'boom');
      await closePage();
      return test.done();
    },
    "Should do a basic repeater test": async function(test) {
      var val;
      makeServer('test/repeater-basic');
      await gotoPage('');
      await waitForRendered();
      val = (await page.evaluate(function() {
        return document.querySelector('app').innerHTML;
      }));
      test.equals(val, '<h1>0 BARRY</h1><h1>1 BUDDY</h1><h1>2 MAGGIE</h1><h1>3 TEDDY</h1>');
      await closePage();
      return test.done();
    },
    "Should do a large repeater test": async function(test) {
      var val;
      makeServer('test/repeater-large');
      await gotoPage('');
      await waitForRendered();
      val = (await page.evaluate(function() {
        return document.querySelectorAll('h1').length;
      }));
      test.equals(val, 10000);
      await closePage();
      return test.done();
    }
  };

}).call(this);
