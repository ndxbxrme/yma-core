{
  "version": 3,
  "file": "index.js",
  "sourceRoot": "..",
  "sources": [
    "src\\index.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "styles = document.createElement 'style'\r\nstyles.innerText = '.yma-router-parked, .yma-hidden {display:none}'\r\ndocument.querySelector 'head'\r\n.append styles\r\nmodule.exports =\r\n  go: require '/components/go'\r\n  hide: (app) ->\r\n    (scope, elem, props) ->\r\n      if props.hide and app.$eval props.hide, scope\r\n        app.$addClass elem, 'yma-hidden'\r\n  \"if\": (app) ->\r\n    pre: (scope, elem, props) ->\r\n      console.log 'if', props['if']\r\n      if props[\"if\"] and app.$eval props[\"if\"], scope\r\n        console.log 1\r\n        return [scope]\r\n      else\r\n        console.log 2\r\n        return []\r\n  press: (app) ->\r\n    (scope, elem, props) ->\r\n      if /\\(/.test props.press\r\n        listener = (event) ->\r\n          scope.$event = event\r\n          app.$eval props.press, scope\r\n          delete scope.$event\r\n      else\r\n        listener = app.$eval props.press, scope\r\n      if typeof(listener) is 'function'\r\n        scope.$addEventListeners elem, ['mousedown', 'click'], listener\r\n  repeat: (app) ->\r\n    hashes = []\r\n    pre: (scope, elem, props) ->\r\n      itemName = 'item'\r\n      repeat = props.repeat\r\n      repeat = repeat.replace /\\sas\\s([\\w_]+)$/, (all, name) ->\r\n        itemName = name\r\n        ''\r\n      arr = app.$eval(repeat, scope)\r\n      if arr\r\n        results = arr.map (item, i) ->\r\n          hash = app.$hash JSON.stringify item\r\n          hashIndex = hashes.indexOf hash\r\n          newscope = app.Scope scope\r\n          newscope[itemName] = item\r\n          newscope.$index = i\r\n          newscope.$first = i is 0\r\n          newscope.$last = i is arr.length - 1\r\n          newscope.$fresh = hashIndex is -1\r\n          newscope.$moveUp = hashIndex > i\r\n          newscope.$moveDown = hashIndex isnt -1 and hashIndex < i\r\n          newscope.$lastIndex = hashIndex\r\n          #newscope.$dataid = app.$hash JSON.stringify app.$hashObject newscope\r\n          newscope\r\n        if scope.$phase is 'render'\r\n          hashes = results.map (scope) ->\r\n            app.$hash JSON.stringify scope[itemName]\r\n        return results\r\n      else\r\n        return []\r\n  controller: (app) ->\r\n    pre: (scope, elem, props) ->\r\n      ctrl = app.components[props.controller.toUpperCase()]\r\n      ctrl.controller scope if ctrl\r\n      null\r\n  router: (app) ->\r\n    callbacks = app.Callbacks()\r\n    scenes = {}\r\n    currentscene = null\r\n    routerScope = null\r\n    rendered = false\r\n    bootstrapped = false\r\n    checkScenePath = (pathname, route) ->\r\n      params = []\r\n      reg = route.replace /:(\\w+)/g, (all, param) ->\r\n        params.push param\r\n        '([^/]+)'\r\n      regex = new RegExp '^' + reg + '$'\r\n      data = {}\r\n      if m = pathname.match regex\r\n        for match, i in m\r\n          continue if i is 0\r\n          data[params[i - 1]] = match\r\n        return data\r\n      else\r\n        return null\r\n    parsePath = (pathname) ->\r\n      for name, scene of scenes\r\n        if data = checkScenePath pathname, scene.route\r\n          return\r\n            name: scene.name\r\n            data: data\r\n    go = (name, data, firstTime) ->\r\n      if currentscene.name is name and JSON.stringify(currentscene.data) is JSON.stringify(data) and not firstTime\r\n        return\r\n      nextscene = scenes[name]\r\n      return if not nextscene\r\n      try\r\n        await callbacks.$call 'sceneWillChange',\r\n          from: currentscene\r\n          to: nextscene\r\n      catch e\r\n        go e.redirect if e.redirect\r\n        return\r\n      if currentscene\r\n        app.$removeClass currentscene.scene, ['yma-router-active', 'yma-transition-in']\r\n        app.$addClass currentscene.scene, ['yma-router-parked', 'yma-transition-out']\r\n        await app.$teardownChildren app.$makeId currentscene.scene\r\n      await app.$teardownChildren app.$makeId nextscene.scene\r\n      currentscene = nextscene\r\n      currentscene.data = data or {}\r\n      routerScope.data = data\r\n      if nextscene.component\r\n        nextscene.scene.innerHTML = '<' + nextscene.component + '>' + nextscene.html + '</' + nextscene.component + '>'\r\n      else\r\n        nextscene.scene.innerHTML = nextscene.html\r\n      await app.$renderChildren nextscene.scene, routerScope\r\n      app.$removeClass nextscene.scene, ['yma-router-parked', 'yma-transition-out']\r\n      app.$addClass nextscene.scene, ['yma-router-active', 'yma-transition-in']\r\n      routes = currentscene.route.replace /:(\\w+)/g, (all, param) ->\r\n        currentscene.data[param]?.toString() or all\r\n      .split /\\|/g\r\n      route = ''\r\n      for r in routes\r\n        if r.length > route.length and not /:/.test r\r\n          route = r\r\n      window.history.pushState route, null, route if route isnt window.location.pathname\r\n    controller: (scope, elem) ->\r\n      routerScope = scope\r\n      if currentscene\r\n        routerScope.data = currentscene.data\r\n      else\r\n        scope.$on 'bootstrap', ->\r\n          return if bootstrapped\r\n          for scene in elem.querySelectorAll 'scene'\r\n            props = app.$getProps scene\r\n            props.scene = scene\r\n            props.html = scene.innerHTML\r\n            params = []\r\n            if props.route\r\n              if data = checkScenePath props.route, window.location.pathname\r\n                props.data = data\r\n                scope.data = data\r\n                currentscene = props\r\n            scenes[props.name] = props\r\n            currentscene = props if (typeof(props.default) isnt 'undefined') and not currentscene\r\n            currentscene = props if props.name is currentscene.name\r\n            scene.removeAttribute 'route'\r\n            app.$addClass scene, 'yma-router-parked'\r\n          bootstrapped = true\r\n          go currentscene.name, currentscene.data, true if rendered and bootstrapped\r\n      firstTime = ->\r\n        if not rendered\r\n          rendered = true\r\n          go currentscene.name, currentscene.data, true if rendered and bootstrapped\r\n        app.$off 'rendered', firstTime\r\n      app.$on 'rendered', firstTime\r\n      routerScope.$on 'update', ->\r\n        for name, scene of scenes\r\n          scene.scene = elem.querySelector 'scene[name=\"' + scene.name + '\"]'\r\n          app.$removeClass scene.scene, 'yma-router-active'\r\n          app.$addClass scene.scene, 'yma-router-parked'\r\n        app.$removeClass currentscene.scene, 'yma-router-parked'\r\n        app.$addClass currentscene.scene, 'yma-router-active'\r\n    service: ->\r\n      go: go\r\n      $on: callbacks.$on\r\n      parsePath: parsePath\r\n  model: (app) ->\r\n    (scope, elem, props) ->\r\n      setValue = ->\r\n        if elem.value isnt app.$eval props.model\r\n          value = app.$getScopeVar props.model, scope\r\n          elem.value = value if typeof(value) isnt 'undefined'\r\n      setValue()\r\n      updateModel = (event) ->\r\n        scope[props.model] = elem.value\r\n        app.$setScopeVar props.model, elem.value, scope\r\n        scope.$update()\r\n      scope.$addEventListeners elem, ['keyup', 'change', 'paste', 'mouseup'], updateModel\r\n      scope.$on 'update', setValue\r\n  autofocus: ->\r\n    (scope, elem) ->\r\n      elem.focus()\r\n"
  ]
}