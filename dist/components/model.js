// Generated by CoffeeScript 2.5.1
(function() {
  module.exports = function(app) {
    var getFormElement;
    ({getFormElement} = require('./common')(app));
    return function(scope, elem, props) {
      var formElement, setValue, updateModel;
      formElement = getFormElement(elem);
      setValue = async function() {
        var i, len, ref, results, validator, value;
        if (elem.value !== app.$eval(props.model)) {
          value = app.$getScopeVar(props.model, scope);
          if (typeof value !== 'undefined') {
            elem.value = value;
          }
          if (formElement) {
            formElement[props.name] = formElement[props.name] || {};
            if (typeof value !== 'undefined') {
              formElement[props.name].$value = elem.value;
            }
            if (formElement[props.name].$validators) {
              ref = formElement[props.name].$validators;
              results = [];
              for (i = 0, len = ref.length; i < len; i++) {
                validator = ref[i];
                results.push((await validator(elem.value)));
              }
              return results;
            }
          }
        }
      };
      setValue();
      updateModel = async function(event) {
        var i, len, ref, updateData, validator;
        if (formElement != null ? formElement[props.name].$validators : void 0) {
          ref = formElement[props.name].$validators;
          for (i = 0, len = ref.length; i < len; i++) {
            validator = ref[i];
            await validator(elem.value);
          }
        }
        if (typeof value !== 'undefined') {
          //scope[props.model] = elem.value
          if (formElement != null) {
            formElement[props.name].$value = elem.value;
          }
        }
        updateData = {};
        updateData[props.model] = elem.value;
        return scope.$update(updateData);
      };
      scope.$addEventListeners(elem, ['keyup', 'change', 'paste', 'mouseup'], updateModel);
      return scope.$on('update', setValue);
    };
  };

}).call(this);

//# sourceMappingURL=model.js.map
