{
  "version": 3,
  "file": "model.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\components\\model.coffee"
  ],
  "names": [],
  "mappings": ";AACC;EAAA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,CAAA;AACjB,QAAA;IAAE,CAAA,CAAC,cAAD,CAAA,GAAmB,OAAA,CAAQ,UAAR,CAAA,CAAoB,GAApB,CAAnB;WACA,QAAA,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAAA;AACF,UAAA,WAAA,EAAA,QAAA,EAAA;MAAI,WAAA,GAAc,cAAA,CAAe,IAAf;MACd,QAAA,GAAW,MAAA,QAAA,CAAA,CAAA;AACf,YAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,SAAA,EAAA;QAAM,IAAG,IAAI,CAAC,KAAL,KAAgB,GAAG,CAAC,KAAJ,CAAU,KAAK,CAAC,KAAhB,CAAnB;UACE,KAAA,GAAQ,GAAG,CAAC,YAAJ,CAAiB,KAAK,CAAC,KAAvB,EAA8B,KAA9B;UACR,IAAsB,OAAO,KAAP,KAAmB,WAAzC;YAAA,IAAI,CAAC,KAAL,GAAa,MAAb;;UACA,WAAW,CAAC,KAAK,CAAC,IAAP,CAAX,GAA0B,WAAW,CAAC,KAAK,CAAC,IAAP,CAAX,IAA2B,CAAA;UACrD,IAA+C,OAAO,KAAP,KAAmB,WAAlE;YAAA,WAAW,CAAC,KAAK,CAAC,IAAP,CAAY,CAAC,MAAxB,GAAiC,IAAI,CAAC,MAAtC;;UACA,IAAG,WAAW,CAAC,KAAK,CAAC,IAAP,CAAY,CAAC,WAA3B;AACE;AAAA;YAAA,KAAA,qCAAA;;2BACE,CAAA,MAAM,SAAA,CAAU,IAAI,CAAC,KAAf,CAAN;YADF,CAAA;2BADF;WALF;;MADS;MASX,QAAA,CAAA;MACA,WAAA,GAAc,MAAA,QAAA,CAAC,KAAD,CAAA;AAClB,YAAA,CAAA,EAAA,GAAA,EAAA,GAAA,EAAA;QAAM,IAAG,WAAW,CAAC,KAAK,CAAC,IAAP,CAAY,CAAC,WAA3B;AACE;UAAA,KAAA,qCAAA;;YACE,MAAM,SAAA,CAAU,IAAI,CAAC,KAAf;UADR,CADF;;QAGA,KAAK,CAAC,KAAK,CAAC,KAAP,CAAL,GAAqB,IAAI,CAAC;QAC1B,GAAG,CAAC,YAAJ,CAAiB,KAAK,CAAC,KAAvB,EAA8B,IAAI,CAAC,KAAnC,EAA0C,KAA1C;QACA,IAA+C,OAAO,KAAP,KAAmB,WAAlE;UAAA,WAAW,CAAC,KAAK,CAAC,IAAP,CAAY,CAAC,MAAxB,GAAiC,IAAI,CAAC,MAAtC;;eACA,KAAK,CAAC,OAAN,CAAA;MAPY;MAQd,KAAK,CAAC,kBAAN,CAAyB,IAAzB,EAA+B,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,SAA7B,CAA/B,EAAwE,WAAxE;aACA,KAAK,CAAC,GAAN,CAAU,QAAV,EAAoB,QAApB;IArBF;EAFe;AAAjB",
  "sourcesContent": [
    "\r\nmodule.exports = (app) ->\r\n  {getFormElement} = require('./common') app\r\n  (scope, elem, props) ->\r\n    formElement = getFormElement elem\r\n    setValue = ->\r\n      if elem.value isnt app.$eval props.model\r\n        value = app.$getScopeVar props.model, scope\r\n        elem.value = value if typeof(value) isnt 'undefined'\r\n        formElement[props.name] = formElement[props.name] or {}\r\n        formElement[props.name].$value = elem.value if typeof(value) isnt 'undefined'\r\n        if formElement[props.name].$validators\r\n          for validator in formElement[props.name].$validators\r\n            await validator elem.value\r\n    setValue()\r\n    updateModel = (event) ->\r\n      if formElement[props.name].$validators\r\n        for validator in formElement[props.name].$validators\r\n          await validator elem.value\r\n      scope[props.model] = elem.value\r\n      app.$setScopeVar props.model, elem.value, scope\r\n      formElement[props.name].$value = elem.value if typeof(value) isnt 'undefined'\r\n      scope.$update()\r\n    scope.$addEventListeners elem, ['keyup', 'change', 'paste', 'mouseup'], updateModel\r\n    scope.$on 'update', setValue\r\n"
  ]
}