// Generated by CoffeeScript 2.5.1
(function() {
  var getFormElement;

  getFormElement = function(elem) {
    var formElement, node;
    node = elem;
    while (node.parentNode && node.tagName !== 'FORM') {
      node = node.parentNode;
    }
    if (node) {
      formElement = app.$getElement(node).data;
      if (typeof formElement === 'undefined') {
        formElement[props.name] = {};
        formElement = formElement[props.name];
      }
    }
    return formElement;
  };

  module.exports = {
    getFormElement: getFormElement,
    addFormError: function(error, elem, props) {
      var formElement;
      formElement = getFormElement(elem);
      formElement.$errors = formElement.$errors || {};
      formElement.$errors[error] = formElement.$errors[error] || {};
      formElement.$errors[error][props.name] = true;
      formElement[props.name] = formElement[props.name] || {};
      formElement[props.name].$errors = formElement[props.name].$errors || {};
      return formElement[props.name].$errors[error] = true;
    },
    removeFormError: function(error, elem, props) {
      var formElement, ref, ref1, ref2, ref3, ref4;
      formElement = getFormElement(elem);
      if ((ref = formElement[props.name].$errors) != null) {
        delete ref[error];
      }
      if (!Object.keys(formElement[props.name].$errors != null).length) {
        delete formElement[props.name].$errors;
      }
      if ((ref1 = formElement.$errors) != null) {
        if ((ref2 = ref1[error]) != null) {
          delete ref2[props.name];
        }
      }
      if (!Object.keys(((ref3 = formElement.$errors) != null ? ref3[error] : void 0) != null).length) {
        if ((ref4 = formElement.$errors) != null) {
          delete ref4[error];
        }
      }
      if (!Object.keys(formElement.$errors != null).length) {
        return delete formElement.$errors;
      }
    }
  };

}).call(this);

//# sourceMappingURL=common.js.map
