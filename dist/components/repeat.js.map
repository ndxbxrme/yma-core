{
  "version": 3,
  "file": "repeat.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\components\\repeat.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,CAAA;AACjB,QAAA;IAAE,MAAA,GAAS;WACT;MAAA,GAAA,EAAK,QAAA,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAAA;AACP,YAAA,GAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA;QAAI,QAAA,GAAW;QACX,MAAA,GAAS,KAAK,CAAC;QACf,QAAA,GAAW,MAAM,CAAC,OAAP,CAAe,iBAAf,EAAkC,QAAA,CAAC,GAAD,EAAM,IAAN,CAAA;UAC3C,QAAA,GAAW;iBACX;QAF2C,CAAlC;QAGX,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAU,QAAV,EAAoB,KAApB;QACN,IAAG,GAAH;UACE,OAAA,GAAU,GAAG,CAAC,GAAJ,CAAQ,QAAA,CAAC,IAAD,EAAO,CAAP,CAAA;AACxB,gBAAA,IAAA,EAAA,SAAA,EAAA;YAAQ,IAAA,GAAO,GAAG,CAAC,KAAJ,CAAU,IAAI,CAAC,SAAL,CAAe,IAAf,CAAV;YACP,SAAA,GAAY,MAAM,CAAC,OAAP,CAAe,IAAf;YACZ,QAAA,GAAW,GAAG,CAAC,KAAJ,CAAU,KAAV;YACX,QAAQ,CAAC,QAAD,CAAR,GAAqB;YACrB,QAAQ,CAAC,MAAT,GAAkB;YAClB,QAAQ,CAAC,MAAT,GAAkB,CAAA,KAAK;YACvB,QAAQ,CAAC,KAAT,GAAiB,CAAA,KAAK,GAAG,CAAC,MAAJ,GAAa;YACnC,QAAQ,CAAC,MAAT,GAAkB,SAAA,KAAa,CAAC;YAChC,QAAQ,CAAC,OAAT,GAAmB,SAAA,GAAY;YAC/B,QAAQ,CAAC,SAAT,GAAqB,SAAA,KAAe,CAAC,CAAhB,IAAsB,SAAA,GAAY;YACvD,QAAQ,CAAC,UAAT,GAAsB;YACtB,QAAQ,CAAC,SAAT,GAAqB,GAAG,CAAC,KAAJ,CAAU,IAAI,CAAC,SAAL,CAAe,GAAG,CAAC,WAAJ,CAAgB,IAAhB,CAAf,CAAV;mBACrB;UAbgB,CAAR;UAcV,IAAG,KAAK,CAAC,MAAN,KAAgB,QAAnB;YACE,MAAA,GAAS,OAAO,CAAC,GAAR,CAAY,QAAA,CAAC,KAAD,CAAA;qBACnB,GAAG,CAAC,KAAJ,CAAU,IAAI,CAAC,SAAL,CAAe,KAAK,CAAC,QAAD,CAApB,CAAV;YADmB,CAAZ,EADX;;AAGA,iBAAO,QAlBT;SAAA,MAAA;AAoBE,iBAAO,GApBT;;MAPG;IAAL;EAFe;AAAjB",
  "sourcesContent": [
    "module.exports = (app) ->\r\n  hashes = []\r\n  pre: (scope, elem, props) ->\r\n    itemName = '$item'\r\n    repeat = props.repeat\r\n    myrepeat = repeat.replace /\\sas\\s([\\w_]+)$/, (all, name) ->\r\n      itemName = name\r\n      ''\r\n    arr = app.$eval(myrepeat, scope)\r\n    if arr\r\n      results = arr.map (item, i) ->\r\n        hash = app.$hash JSON.stringify item\r\n        hashIndex = hashes.indexOf hash\r\n        newscope = app.Scope scope\r\n        newscope[itemName] = item\r\n        newscope.$index = i\r\n        newscope.$first = i is 0\r\n        newscope.$last = i is arr.length - 1\r\n        newscope.$fresh = hashIndex is -1\r\n        newscope.$moveUp = hashIndex > i\r\n        newscope.$moveDown = hashIndex isnt -1 and hashIndex < i\r\n        newscope.$lastIndex = hashIndex\r\n        newscope.$dataHash = app.$hash JSON.stringify app.$hashObject item\r\n        newscope\r\n      if scope.$phase is 'render'\r\n        hashes = results.map (scope) ->\r\n          app.$hash JSON.stringify scope[itemName]\r\n      return results\r\n    else\r\n      return []\r\n"
  ]
}