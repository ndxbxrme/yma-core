{
  "version": 3,
  "file": "router.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\components\\router.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,GAAD,CAAA;AACjB,QAAA,SAAA,EAAA,cAAA,EAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA;IAAE,GAAG,CAAC,aAAJ,CAAkB,mCAAlB;IACA,SAAA,GAAY,GAAG,CAAC,SAAJ,CAAA;IACZ,MAAA,GAAS,CAAA;IACT,WAAA,GAAc;IACd,cAAA,GAAiB,QAAA,CAAC,QAAD,EAAW,KAAX,CAAA;AACnB,UAAA,IAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,MAAA,EAAA,GAAA,EAAA;MAAI,MAAA,GAAS;MACT,GAAA,GAAM,KAAK,CAAC,OAAN,CAAc,SAAd,EAAyB,QAAA,CAAC,GAAD,EAAM,KAAN,CAAA;QAC7B,MAAM,CAAC,IAAP,CAAY,KAAZ;eACA;MAF6B,CAAzB;MAGN,KAAA,GAAQ,IAAI,MAAJ,CAAW,GAAA,GAAM,GAAN,GAAY,GAAvB;MACR,IAAA,GAAO,CAAA;MACP,IAAG,CAAA,GAAI,QAAQ,CAAC,KAAT,CAAe,KAAf,CAAP;QACE,KAAA,2CAAA;;UACE,IAAY,CAAA,KAAK,CAAjB;AAAA,qBAAA;;UACA,IAAI,CAAC,MAAM,CAAC,CAAA,GAAI,CAAL,CAAP,CAAJ,GAAsB;QAFxB;AAGA,eAAO,KAJT;OAAA,MAAA;AAME,eAAO,KANT;;IAPe;IAcjB,SAAA,GAAY,QAAA,CAAC,QAAD,CAAA;AACd,UAAA,IAAA,EAAA,IAAA,EAAA;MAAI,KAAA,cAAA;;QACE,IAAG,IAAA,GAAO,cAAA,CAAe,QAAf,EAAyB,KAAK,CAAC,KAA/B,CAAV;AACE,iBACE;YAAA,IAAA,EAAM,KAAK,CAAC,KAAZ;YACA,IAAA,EAAM;UADN,EAFJ;;MADF;IADU;IAMZ,EAAA,GAAK,QAAA,CAAC,IAAD,EAAO,IAAP,CAAA;MACH,WAAW,CAAC,MAAZ,GACE;QAAA,KAAA,EAAO,IAAP;QACA,IAAA,EAAM;MADN;aAEF,WAAW,CAAC,OAAZ,CAAA;IAJG;WAKL;MAAA,UAAA,EAAY,QAAA,CAAC,KAAD,EAAQ,IAAR,EAAc,KAAd,CAAA;QACV,WAAA,GAAc;QACd,KAAK,CAAC,MAAN,GAAe;eACf,GAAG,CAAC,KAAJ,CAAU,UAAV,EAAsB,QAAA,CAAA,CAAA;UACpB,KAAK,CAAC,MAAN,GAAe,SAAA,CAAU,MAAM,CAAC,QAAQ,CAAC,QAA1B;iBACf,KAAK,CAAC,OAAN,CAAA;QAFoB,CAAtB;MAHU,CAAZ;MAMA,OAAA,EAAS,QAAA,CAAA,CAAA;eACP;UAAA,EAAA,EAAI,EAAJ;UACA,GAAA,EAAK,SAAS,CAAC,GADf;UAEA,SAAA,EAAW,SAFX;UAGA,QAAA,EAAU,QAAA,CAAC,KAAD,CAAA;mBACR,MAAM,CAAC,KAAK,CAAC,KAAP,CAAN,GAAsB;UADd;QAHV;MADO;IANT;EA9Be;AAAjB",
  "sourcesContent": [
    "module.exports = (app) ->\r\n  app.$appendStyles '.yma-router-parked {display:none}'\r\n  callbacks = app.Callbacks()\r\n  scenes = {}\r\n  routerScope = null\r\n  checkScenePath = (pathname, route) ->\r\n    params = []\r\n    reg = route.replace /:(\\w+)/g, (all, param) ->\r\n      params.push param\r\n      '([^/]+)'\r\n    regex = new RegExp '^' + reg + '$'\r\n    data = {}\r\n    if m = pathname.match regex\r\n      for match, i in m\r\n        continue if i is 0\r\n        data[params[i - 1]] = match\r\n      return data\r\n    else\r\n      return null\r\n  parsePath = (pathname) ->\r\n    for name, scene of scenes\r\n      if data = checkScenePath pathname, scene.route\r\n        return\r\n          name: scene.scene\r\n          data: data\r\n  go = (name, data)->\r\n    routerScope.$scene =\r\n      scene: name\r\n      data: data\r\n    routerScope.$update()\r\n  controller: (scope, elem, props) ->\r\n    routerScope = scope\r\n    scope.$scene = null\r\n    app.$once 'rendered', ->\r\n      scope.$scene = parsePath window.location.pathname\r\n      scope.$update()\r\n  service: ->\r\n    go: go\r\n    $on: callbacks.$on\r\n    parsePath: parsePath\r\n    addScene: (scene) ->\r\n      scenes[scene.scene] = scene\r\n"
  ]
}