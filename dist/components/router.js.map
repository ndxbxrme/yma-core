{
  "version": 3,
  "file": "router.js",
  "sourceRoot": "..\\..",
  "sources": [
    "src\\components\\router.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "module.exports = (app) ->\r\n  app.$appendStyles '.yma-router-parked {display:none}'\r\n  callbacks = app.Callbacks()\r\n  scenes = {}\r\n  currentscene = null\r\n  routerScope = null\r\n  rendered = false\r\n  bootstrapped = false\r\n  checkScenePath = (pathname, route) ->\r\n    params = []\r\n    reg = route.replace /:(\\w+)/g, (all, param) ->\r\n      params.push param\r\n      '([^/]+)'\r\n    regex = new RegExp '^' + reg + '$'\r\n    data = {}\r\n    if m = pathname.match regex\r\n      for match, i in m\r\n        continue if i is 0\r\n        data[params[i - 1]] = match\r\n      return data\r\n    else\r\n      return null\r\n  parsePath = (pathname) ->\r\n    for name, scene of scenes\r\n      if data = checkScenePath pathname, scene.route\r\n        return\r\n          name: scene.name\r\n          data: data\r\n  go = (name, data, firstTime) ->\r\n    if currentscene.name is name and JSON.stringify(currentscene.data) is JSON.stringify(data) and not firstTime\r\n      return\r\n    nextscene = scenes[name]\r\n    return if not nextscene\r\n    try\r\n      await callbacks.$call 'sceneWillChange',\r\n        from: currentscene\r\n        to: nextscene\r\n    catch e\r\n      go e.redirect if e.redirect\r\n      return\r\n    if currentscene\r\n      app.$removeClass currentscene.scene, ['yma-router-active', 'yma-transition-in']\r\n      app.$addClass currentscene.scene, ['yma-router-parked', 'yma-transition-out']\r\n      await app.$teardownChildren app.$makeId currentscene.scene\r\n    await app.$teardownChildren app.$makeId nextscene.scene\r\n    currentscene = nextscene\r\n    currentscene.data = data or {}\r\n    routerScope.data = data\r\n    if nextscene.component\r\n      nextscene.scene.innerHTML = '<' + nextscene.component + '>' + nextscene.html + '</' + nextscene.component + '>'\r\n    else\r\n      nextscene.scene.innerHTML = nextscene.html\r\n    await app.$renderChildren nextscene.scene, routerScope\r\n    app.$removeClass nextscene.scene, ['yma-router-parked', 'yma-transition-out']\r\n    app.$addClass nextscene.scene, ['yma-router-active', 'yma-transition-in']\r\n    routes = currentscene.route.replace /:(\\w+)/g, (all, param) ->\r\n      currentscene.data[param]?.toString() or all\r\n    .split /\\|/g\r\n    route = ''\r\n    for r in routes\r\n      if r.length > route.length and not /:/.test r\r\n        route = r\r\n    window.history.pushState route, null, route if route isnt window.location.pathname\r\n  controller: (scope, elem) ->\r\n    routerScope = scope\r\n    if currentscene\r\n      routerScope.data = currentscene.data\r\n    else\r\n      scope.$on 'bootstrap', ->\r\n        return if bootstrapped\r\n        for scene in elem.querySelectorAll 'scene'\r\n          props = app.$getProps scene\r\n          props.scene = scene\r\n          props.html = scene.innerHTML\r\n          params = []\r\n          if props.route\r\n            if data = checkScenePath props.route, window.location.pathname\r\n              props.data = data\r\n              scope.data = data\r\n              currentscene = props\r\n          scenes[props.name] = props\r\n          currentscene = props if (typeof(props.default) isnt 'undefined') and not currentscene\r\n          currentscene = props if props.name is currentscene.name\r\n          scene.removeAttribute 'route'\r\n          app.$addClass scene, 'yma-router-parked'\r\n        bootstrapped = true\r\n        go currentscene.name, currentscene.data, true if rendered and bootstrapped\r\n    firstTime = ->\r\n      if not rendered\r\n        rendered = true\r\n        go currentscene.name, currentscene.data, true if rendered and bootstrapped\r\n      app.$off 'rendered', firstTime\r\n    app.$on 'rendered', firstTime\r\n    routerScope.$on 'update', ->\r\n      for name, scene of scenes\r\n        scene.scene = elem.querySelector 'scene[name=\"' + scene.name + '\"]'\r\n        app.$removeClass scene.scene, 'yma-router-active'\r\n        app.$addClass scene.scene, 'yma-router-parked'\r\n      app.$removeClass currentscene.scene, 'yma-router-parked'\r\n      app.$addClass currentscene.scene, 'yma-router-active'\r\n  service: ->\r\n    go: go\r\n    $on: callbacks.$on\r\n    parsePath: parsePath\r\n    name: -> currentscene.name\r\n    data: -> currentscene.data\r\n"
  ]
}